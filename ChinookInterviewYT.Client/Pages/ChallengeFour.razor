@page "/challengefour"
@using ApexCharts
@rendermode InteractiveWebAssembly
@inject HttpClient Http

<title>Challenge Four</title>

<div class="container-xxl my-3">

    <h3 class="ctaTitle">Challenge Four: List customers who have spent more than $40</h3>
    <div class="ctaSubTitle border-bottom mb-3">
        <p>Include each customer's total number of invoices and total amount spent across all invoices.
            Order the results by the total amount spent in descending order.</p>
    </div>
    @if (isLoading == false)
    {
        <div class="row">
            <ApexChart TItem="CustomerSpendingDTO" title="Top Five Customers" height="225" >
                <ApexCharts.ApexPointSeries TItem="CustomerSpendingDTO" 
                 Items="Top5Customers"
                 SeriesType="ApexCharts.SeriesType.Bar"
                 Name="Total Sales"
                 XValue="c => c.FullName"
                 YValue="c => c.TotalAmountSpent" />
            </ApexChart>
        </div>
        <div class="table-responsive border border-1 mt-5 p-2">
            <table class="table table-striped table-primary shadow">
                <thead class="table-dark">
                    <tr>
                        <th>Name</th>
                        <th>Invoices</th>
                        <th>Amount</th>
                        <th>Revenue Percentage</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var customer in customerSpendingList)
                    {
                        <tr>
                            <td>@customer.FullName</td>
                            <td class="text-center">@customer.TotalInvoices.ToString("N0")</td>
                            <td>@customer.TotalAmountSpent.ToString("C")</td>
                            <td class="text-center">@customer.PercentageOfTotalRevenue.ToString("P2")</td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    }
    else{
        <div> Data is Loading . . . </div>
    }

</div>

@code {
    private List<CustomerSpendingDTO> customerSpendingList = new List<CustomerSpendingDTO>();
    private List<CustomerSpendingDTO> Top5Customers = new List<CustomerSpendingDTO>();
    private bool isLoading = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = true;
            customerSpendingList = await Http.GetFromJsonAsync<List<CustomerSpendingDTO>>("api/Customers/CustomerSpending")?? new();

            if (customerSpendingList != null)
            {
              Top5Customers = customerSpendingList.Take(5).ToList();
            }
           
            isLoading = false;
            StateHasChanged();
        }
    }
}
